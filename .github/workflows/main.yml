name: RDP via Ngrok (2025)
on:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: ðŸ”§ Enable Remote Desktop
      run: |
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0
        Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
        netsh advfirewall firewall add rule name="RDP-Allow" dir=in action=allow protocol=TCP localport=3389

    - name: ðŸ‘¤ Create RDP user
      run: |
        net user RDP Passw0rd! /add
        net localgroup administrators RDP /add

    - name: ðŸŒ€ Download latest Ngrok (v3)
      run: |
        Invoke-WebRequest -Uri "https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-windows-amd64.zip" -OutFile "ngrok.zip"
        Expand-Archive ngrok.zip -DestinationPath "$env:USERPROFILE\ngrok"
        cd "$env:USERPROFILE\ngrok"
        .\ngrok.exe --version

    - name: ðŸ”‘ Auth Ngrok token
      env:
        NGROK_AUTH_TOKEN: ${{ secrets.NGROK_TOKEN }}
      run: |
        cd "$env:USERPROFILE\ngrok"
        .\ngrok.exe config add-authtoken $env:NGROK_TOKEN

    - name: ðŸš€ Start RDP tunnel
      run: |
        cd "$env:USERPROFILE\ngrok"
        Start-Process -FilePath ".\ngrok.exe" -ArgumentList "tcp 3389" -WindowStyle Hidden
        Start-Sleep -Seconds 10
        Invoke-RestMethod -Uri "http://127.0.0.1:4040/api/tunnels" | Out-File tunnel.json -Force
        Get-Content tunnel.json

    - name: âœ… thÃ nh cÃ´ng 
      run: echo "Connect using the ngrok TCP address shown above (user: RDP / pass: Passw0rd!)"